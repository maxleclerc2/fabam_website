version: "3.9"
services:
    web:
        build : .
        labels:
            - "traefik.http.routers.web.rule=PathPrefix(`/`)"
            - "traefik.http.middlewares.web.stripPrefix.prefixes=/"
            - "traefik.http.routers.web.middlewares=web@docker"
        deploy:
            replicas: 3

    neo4j:
        image: neo4j:4.4.3-community
        ports:
            - "7474:7474"
            - "7687:7687"
        environment:
            - NEO4J_dbms_memory_heap_initial__size=100M
            - NEO4J_dbms_memory_pagecache_size=100M
            - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
            - NEO4J_AUTH=neo4j/root
            - EXTENDED_CONF=yes
            - NEO4J_EDITION=docker_compose
            - NEO4J_dbms_mode=CORE

    minecraft:
        image: sirplexus/minecraft-server-standalone:1.18.1
        ports:
            -   "25565:25565/tcp"
        environment:
            - RAM=2G

    traefik:
        image: traefik:2.5
        restart: unless-stopped
        ports:
            - "80:80"
            - "8080:8080"
            - "8082:8082"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ./traefik.toml:/traefik.toml

    prometheus:
        image: prom/prometheus:v2.10.0
        container_name: prometheus
        volumes:
            - ./prometheus/:/etc/prometheus/
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
        ports:
            -   "9090:9090"
        labels:
            - "traefik.docker.network=traefik"
            - "traefik.backend=prometheus"
            - "traefik.frontend.rule=Host:prometheus.localhost"
            - "traefik.port=9090"

    grafana:
        image: grafana/grafana
        ports:
            -   "3000:3000"
        volumes:
            - ./grafana/provisioning:/etc/grafana/provisioning

